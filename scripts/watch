#!/usr/bin/env node

var IGNORES = /(\.css|\.min\.js)$/;

var path   = require('path');
var watch  = require('node-watch');
var exec   = require('child_process').exec;
var Getopt = require('node-getopt');
var getopt = new Getopt([
    ['l', 'lazy',     'Pass filename of changed file to the command'],
    ['o', 'only=ARG', 'Only handle files with the given extension'],
    ['h', 'help',     'What you\'re looking at now']
]).bindHelp(
    "Usage: " + process.argv[0] + " " + path.dirname(process.argv[1]) +
    " [-l] directory command\n" +
    "\n" +
    "Watches for changes to files in directory. Runs command upon file change.\n" +
    "\n" +
    "[[OPTIONS]]"
);

var opt = getopt.parseSystem();

if (opt.argv.length < 2) {
    getopt.showHelp();
    process.exit(opt.argv.length);
}

var dir  = opt.argv.shift();
var cmd  = opt.argv.shift();
var only = opt.options.only && new RegExp('\\.' + opt.options.only + '$');
var lock;

function handles (file) {
    return only ? only.test(file) : !IGNORES.test(file);
}

watch(dir, function (file) {
    if (lock || !handles(file)) {
        return;
    }

    lock = true;

    var invocation = opt.options.lazy ? [cmd, file].join(' ') : cmd;
    console.log('=> ', invocation);

    exec(invocation, function (err, stdout, stderr) {
        console.log(stdout);
        console.log(stderr);
        lock = null;
    });
});

